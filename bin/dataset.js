"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dataset = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class Dataset extends pulumi.CustomResource {
    /**
     * Get an existing Dataset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Dataset(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of Dataset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Dataset.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["deleteProtected"] = state?.deleteProtected;
            resourceInputs["description"] = state?.description;
            resourceInputs["expandJsonDepth"] = state?.expandJsonDepth;
            resourceInputs["lastWrittenAt"] = state?.lastWrittenAt;
            resourceInputs["name"] = state?.name;
            resourceInputs["slug"] = state?.slug;
        }
        else {
            const args = argsOrState;
            resourceInputs["deleteProtected"] = args?.deleteProtected;
            resourceInputs["description"] = args?.description;
            resourceInputs["expandJsonDepth"] = args?.expandJsonDepth;
            resourceInputs["name"] = args?.name;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastWrittenAt"] = undefined /*out*/;
            resourceInputs["slug"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Dataset.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.Dataset = Dataset;
/** @internal */
Dataset.__pulumiType = 'honeycombio:index/dataset:Dataset';
//# sourceMappingURL=dataset.js.map