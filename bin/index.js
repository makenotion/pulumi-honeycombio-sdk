"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlackRecipient = exports.QueryAnnotation = exports.Query = exports.Provider = exports.PagerdutyRecipient = exports.MsteamsWorkflowRecipient = exports.MsteamsRecipient = exports.MarkerSetting = exports.Marker = exports.getTriggerRecipientOutput = exports.getTriggerRecipient = exports.getSlosOutput = exports.getSlos = exports.getSloOutput = exports.getSlo = exports.getRecipientsOutput = exports.getRecipients = exports.getRecipientOutput = exports.getRecipient = exports.getQuerySpecificationOutput = exports.getQuerySpecification = exports.getQueryResultOutput = exports.getQueryResult = exports.getEnvironmentsOutput = exports.getEnvironments = exports.getEnvironmentOutput = exports.getEnvironment = exports.getDerivedColumnsOutput = exports.getDerivedColumns = exports.getDerivedColumnOutput = exports.getDerivedColumn = exports.getDatasetsOutput = exports.getDatasets = exports.getDatasetOutput = exports.getDataset = exports.getColumnsOutput = exports.getColumns = exports.getColumnOutput = exports.getColumn = exports.getAuthMetadataOutput = exports.getAuthMetadata = exports.Environment = exports.EmailRecipient = exports.DerivedColumn = exports.DatasetDefinition = exports.Dataset = exports.Column = exports.BurnAlert = exports.Board = exports.ApiKey = void 0;
exports.types = exports.config = exports.WebhookRecipient = exports.Trigger = exports.Slo = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
exports.ApiKey = null;
utilities.lazyLoad(exports, ["ApiKey"], () => require("./apiKey"));
exports.Board = null;
utilities.lazyLoad(exports, ["Board"], () => require("./board"));
exports.BurnAlert = null;
utilities.lazyLoad(exports, ["BurnAlert"], () => require("./burnAlert"));
exports.Column = null;
utilities.lazyLoad(exports, ["Column"], () => require("./column"));
exports.Dataset = null;
utilities.lazyLoad(exports, ["Dataset"], () => require("./dataset"));
exports.DatasetDefinition = null;
utilities.lazyLoad(exports, ["DatasetDefinition"], () => require("./datasetDefinition"));
exports.DerivedColumn = null;
utilities.lazyLoad(exports, ["DerivedColumn"], () => require("./derivedColumn"));
exports.EmailRecipient = null;
utilities.lazyLoad(exports, ["EmailRecipient"], () => require("./emailRecipient"));
exports.Environment = null;
utilities.lazyLoad(exports, ["Environment"], () => require("./environment"));
exports.getAuthMetadata = null;
exports.getAuthMetadataOutput = null;
utilities.lazyLoad(exports, ["getAuthMetadata", "getAuthMetadataOutput"], () => require("./getAuthMetadata"));
exports.getColumn = null;
exports.getColumnOutput = null;
utilities.lazyLoad(exports, ["getColumn", "getColumnOutput"], () => require("./getColumn"));
exports.getColumns = null;
exports.getColumnsOutput = null;
utilities.lazyLoad(exports, ["getColumns", "getColumnsOutput"], () => require("./getColumns"));
exports.getDataset = null;
exports.getDatasetOutput = null;
utilities.lazyLoad(exports, ["getDataset", "getDatasetOutput"], () => require("./getDataset"));
exports.getDatasets = null;
exports.getDatasetsOutput = null;
utilities.lazyLoad(exports, ["getDatasets", "getDatasetsOutput"], () => require("./getDatasets"));
exports.getDerivedColumn = null;
exports.getDerivedColumnOutput = null;
utilities.lazyLoad(exports, ["getDerivedColumn", "getDerivedColumnOutput"], () => require("./getDerivedColumn"));
exports.getDerivedColumns = null;
exports.getDerivedColumnsOutput = null;
utilities.lazyLoad(exports, ["getDerivedColumns", "getDerivedColumnsOutput"], () => require("./getDerivedColumns"));
exports.getEnvironment = null;
exports.getEnvironmentOutput = null;
utilities.lazyLoad(exports, ["getEnvironment", "getEnvironmentOutput"], () => require("./getEnvironment"));
exports.getEnvironments = null;
exports.getEnvironmentsOutput = null;
utilities.lazyLoad(exports, ["getEnvironments", "getEnvironmentsOutput"], () => require("./getEnvironments"));
exports.getQueryResult = null;
exports.getQueryResultOutput = null;
utilities.lazyLoad(exports, ["getQueryResult", "getQueryResultOutput"], () => require("./getQueryResult"));
exports.getQuerySpecification = null;
exports.getQuerySpecificationOutput = null;
utilities.lazyLoad(exports, ["getQuerySpecification", "getQuerySpecificationOutput"], () => require("./getQuerySpecification"));
exports.getRecipient = null;
exports.getRecipientOutput = null;
utilities.lazyLoad(exports, ["getRecipient", "getRecipientOutput"], () => require("./getRecipient"));
exports.getRecipients = null;
exports.getRecipientsOutput = null;
utilities.lazyLoad(exports, ["getRecipients", "getRecipientsOutput"], () => require("./getRecipients"));
exports.getSlo = null;
exports.getSloOutput = null;
utilities.lazyLoad(exports, ["getSlo", "getSloOutput"], () => require("./getSlo"));
exports.getSlos = null;
exports.getSlosOutput = null;
utilities.lazyLoad(exports, ["getSlos", "getSlosOutput"], () => require("./getSlos"));
exports.getTriggerRecipient = null;
exports.getTriggerRecipientOutput = null;
utilities.lazyLoad(exports, ["getTriggerRecipient", "getTriggerRecipientOutput"], () => require("./getTriggerRecipient"));
exports.Marker = null;
utilities.lazyLoad(exports, ["Marker"], () => require("./marker"));
exports.MarkerSetting = null;
utilities.lazyLoad(exports, ["MarkerSetting"], () => require("./markerSetting"));
exports.MsteamsRecipient = null;
utilities.lazyLoad(exports, ["MsteamsRecipient"], () => require("./msteamsRecipient"));
exports.MsteamsWorkflowRecipient = null;
utilities.lazyLoad(exports, ["MsteamsWorkflowRecipient"], () => require("./msteamsWorkflowRecipient"));
exports.PagerdutyRecipient = null;
utilities.lazyLoad(exports, ["PagerdutyRecipient"], () => require("./pagerdutyRecipient"));
exports.Provider = null;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));
exports.Query = null;
utilities.lazyLoad(exports, ["Query"], () => require("./query"));
exports.QueryAnnotation = null;
utilities.lazyLoad(exports, ["QueryAnnotation"], () => require("./queryAnnotation"));
exports.SlackRecipient = null;
utilities.lazyLoad(exports, ["SlackRecipient"], () => require("./slackRecipient"));
exports.Slo = null;
utilities.lazyLoad(exports, ["Slo"], () => require("./slo"));
exports.Trigger = null;
utilities.lazyLoad(exports, ["Trigger"], () => require("./trigger"));
exports.WebhookRecipient = null;
utilities.lazyLoad(exports, ["WebhookRecipient"], () => require("./webhookRecipient"));
// Export sub-modules:
const config = require("./config");
exports.config = config;
const types = require("./types");
exports.types = types;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "honeycombio:index/apiKey:ApiKey":
                return new exports.ApiKey(name, undefined, { urn });
            case "honeycombio:index/board:Board":
                return new exports.Board(name, undefined, { urn });
            case "honeycombio:index/burnAlert:BurnAlert":
                return new exports.BurnAlert(name, undefined, { urn });
            case "honeycombio:index/column:Column":
                return new exports.Column(name, undefined, { urn });
            case "honeycombio:index/dataset:Dataset":
                return new exports.Dataset(name, undefined, { urn });
            case "honeycombio:index/datasetDefinition:DatasetDefinition":
                return new exports.DatasetDefinition(name, undefined, { urn });
            case "honeycombio:index/derivedColumn:DerivedColumn":
                return new exports.DerivedColumn(name, undefined, { urn });
            case "honeycombio:index/emailRecipient:EmailRecipient":
                return new exports.EmailRecipient(name, undefined, { urn });
            case "honeycombio:index/environment:Environment":
                return new exports.Environment(name, undefined, { urn });
            case "honeycombio:index/marker:Marker":
                return new exports.Marker(name, undefined, { urn });
            case "honeycombio:index/markerSetting:MarkerSetting":
                return new exports.MarkerSetting(name, undefined, { urn });
            case "honeycombio:index/msteamsRecipient:MsteamsRecipient":
                return new exports.MsteamsRecipient(name, undefined, { urn });
            case "honeycombio:index/msteamsWorkflowRecipient:MsteamsWorkflowRecipient":
                return new exports.MsteamsWorkflowRecipient(name, undefined, { urn });
            case "honeycombio:index/pagerdutyRecipient:PagerdutyRecipient":
                return new exports.PagerdutyRecipient(name, undefined, { urn });
            case "honeycombio:index/query:Query":
                return new exports.Query(name, undefined, { urn });
            case "honeycombio:index/queryAnnotation:QueryAnnotation":
                return new exports.QueryAnnotation(name, undefined, { urn });
            case "honeycombio:index/slackRecipient:SlackRecipient":
                return new exports.SlackRecipient(name, undefined, { urn });
            case "honeycombio:index/slo:Slo":
                return new exports.Slo(name, undefined, { urn });
            case "honeycombio:index/trigger:Trigger":
                return new exports.Trigger(name, undefined, { urn });
            case "honeycombio:index/webhookRecipient:WebhookRecipient":
                return new exports.WebhookRecipient(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("honeycombio", "index/apiKey", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/board", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/burnAlert", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/column", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/dataset", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/datasetDefinition", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/derivedColumn", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/emailRecipient", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/environment", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/marker", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/markerSetting", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/msteamsRecipient", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/msteamsWorkflowRecipient", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/pagerdutyRecipient", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/query", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/queryAnnotation", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/slackRecipient", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/slo", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/trigger", _module);
pulumi.runtime.registerResourceModule("honeycombio", "index/webhookRecipient", _module);
pulumi.runtime.registerResourcePackage("honeycombio", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:honeycombio") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new exports.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map