// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Column extends pulumi.CustomResource {
    /**
     * Get an existing Column resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ColumnState, opts?: pulumi.CustomResourceOptions): Column {
        return new Column(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'honeycombio:index/column:Column';

    /**
     * Returns true if the given object is an instance of Column.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Column {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Column.__pulumiType;
    }

    /**
     * The time the Column was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The dataset this Column belongs to.
     */
    declare public readonly dataset: pulumi.Output<string>;
    /**
     * The Column's description.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Whether the Column is hidden or not.
     */
    declare public readonly hidden: pulumi.Output<boolean>;
    /**
     * The time the Column was last written to.
     */
    declare public /*out*/ readonly lastWrittenAt: pulumi.Output<string>;
    /**
     * The name of the Column.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The Column's type. Valid values are `string`, `integer`, `float`, `boolean`.
     */
    declare public readonly type: pulumi.Output<string>;
    /**
     * The time the Column was last updated.
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;

    /**
     * Create a Column resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ColumnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ColumnArgs | ColumnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ColumnState | undefined;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["dataset"] = state?.dataset;
            resourceInputs["description"] = state?.description;
            resourceInputs["hidden"] = state?.hidden;
            resourceInputs["lastWrittenAt"] = state?.lastWrittenAt;
            resourceInputs["name"] = state?.name;
            resourceInputs["type"] = state?.type;
            resourceInputs["updatedAt"] = state?.updatedAt;
        } else {
            const args = argsOrState as ColumnArgs | undefined;
            if (args?.dataset === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataset'");
            }
            resourceInputs["dataset"] = args?.dataset;
            resourceInputs["description"] = args?.description;
            resourceInputs["hidden"] = args?.hidden;
            resourceInputs["name"] = args?.name;
            resourceInputs["type"] = args?.type;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastWrittenAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Column.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Column resources.
 */
export interface ColumnState {
    /**
     * The time the Column was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The dataset this Column belongs to.
     */
    dataset?: pulumi.Input<string>;
    /**
     * The Column's description.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the Column is hidden or not.
     */
    hidden?: pulumi.Input<boolean>;
    /**
     * The time the Column was last written to.
     */
    lastWrittenAt?: pulumi.Input<string>;
    /**
     * The name of the Column.
     */
    name?: pulumi.Input<string>;
    /**
     * The Column's type. Valid values are `string`, `integer`, `float`, `boolean`.
     */
    type?: pulumi.Input<string>;
    /**
     * The time the Column was last updated.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Column resource.
 */
export interface ColumnArgs {
    /**
     * The dataset this Column belongs to.
     */
    dataset: pulumi.Input<string>;
    /**
     * The Column's description.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the Column is hidden or not.
     */
    hidden?: pulumi.Input<boolean>;
    /**
     * The name of the Column.
     */
    name?: pulumi.Input<string>;
    /**
     * The Column's type. Valid values are `string`, `integer`, `float`, `boolean`.
     */
    type?: pulumi.Input<string>;
}
